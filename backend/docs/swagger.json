{
  "openapi": "3.0.0",
  "info": {
    "title": "Goodreads Clone API",
    "description": "API documentation for the Goodreads Clone application",
    "version": "1.0.0",
    "contact": {
      "email": "support@goodreadsclone.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost/goodreads-php-backend/backend",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "books",
      "description": "Operations about books"
    },
    {
      "name": "users",
      "description": "Operations about users"
    },
    {
      "name": "shelves",
      "description": "Operations about user shelves"
    },
    {
      "name": "reviews",
      "description": "Operations about book reviews"
    }
  ],
  "paths": {
    "/auth/login.php": {
      "post": {
        "tags": ["auth"],
        "summary": "Logs user into the system",
        "description": "Authenticates a user and returns user data with session cookie",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Missing required fields: email, password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register.php": {
      "post": {
        "tags": ["auth"],
        "summary": "Registers a new user",
        "description": "Creates a new user account and returns confirmation",
        "operationId": "registerUser",
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "password"
                  },
                  "bio": {
                    "type": "string",
                    "example": "I love to read fantasy books"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Registration successful! ðŸŽ‰"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "example": 4
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email format"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already registered"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout.php": {
      "post": {
        "tags": ["auth"],
        "summary": "Logs out current user",
        "description": "Destroys the user session",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "profilePic": {
            "type": "string",
            "example": "default.png"
          },
          "bio": {
            "type": "string",
            "example": "Book enthusiast and avid reader."
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "roleId": {
            "type": "integer",
            "example": 2
          },
          "lastLogin": {
            "type": "integer",
            "example": 1628097889
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "To Kill a Mockingbird"
          },
          "author": {
            "type": "string",
            "example": "Harper Lee"
          },
          "genre": {
            "type": "string",
            "example": "Classic"
          },
          "description": {
            "type": "string",
            "example": "The unforgettable novel of a childhood in a sleepy Southern town and the crisis of conscience that rocked it."
          },
          "published_year": {
            "type": "integer",
            "example": 1960
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-01T00:00:00Z"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "PHPSESSID"
      }
    }
  },
  "security": [
    {
      "cookieAuth": []
    }
  ]
}
